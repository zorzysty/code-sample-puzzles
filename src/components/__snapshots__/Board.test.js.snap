// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board should render correctly with pieces 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Board
    pieces={
        Array [
            Object {
              "id": 0,
            },
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
            Object {
              "id": 4,
            },
            Object {
              "id": 6,
            },
            Object {
              "id": 7,
            },
            Object {
              "id": 8,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 0,
                            }
          }
/>,
        <DropTarget(Placeholder)
          index={1}
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 2,
                            }
          }
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 3,
                            }
          }
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 4,
                            }
          }
/>,
        <DropTarget(Placeholder)
          index={5}
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 6,
                            }
          }
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 7,
                            }
          }
/>,
        <DragSource(Piece)
          piece={
                    Object {
                              "id": 8,
                            }
          }
/>,
      ],
      "className": "Board",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 0,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "index": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 2,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 3,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 4,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "5",
        "nodeType": "class",
        "props": Object {
          "index": 5,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "6",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 6,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "7",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 7,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "8",
        "nodeType": "class",
        "props": Object {
          "piece": Object {
            "id": 8,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 0,
                                  }
            }
/>,
          <DropTarget(Placeholder)
            index={1}
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 2,
                                  }
            }
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 3,
                                  }
            }
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 4,
                                  }
            }
/>,
          <DropTarget(Placeholder)
            index={5}
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 6,
                                  }
            }
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 7,
                                  }
            }
/>,
          <DragSource(Piece)
            piece={
                        Object {
                                    "id": 8,
                                  }
            }
/>,
        ],
        "className": "Board",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 0,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "index": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 2,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 3,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 4,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "class",
          "props": Object {
            "index": 5,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "6",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 6,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "7",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 7,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "8",
          "nodeType": "class",
          "props": Object {
            "piece": Object {
              "id": 8,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Board should render correctly without pieces 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Board
    pieces={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <DropTarget(Placeholder)
          index={0}
/>,
        <DropTarget(Placeholder)
          index={1}
/>,
        <DropTarget(Placeholder)
          index={2}
/>,
        <DropTarget(Placeholder)
          index={3}
/>,
        <DropTarget(Placeholder)
          index={4}
/>,
        <DropTarget(Placeholder)
          index={5}
/>,
        <DropTarget(Placeholder)
          index={6}
/>,
        <DropTarget(Placeholder)
          index={7}
/>,
        <DropTarget(Placeholder)
          index={8}
/>,
      ],
      "className": "Board",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "index": 0,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "index": 1,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "index": 2,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "index": 3,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "class",
        "props": Object {
          "index": 4,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "5",
        "nodeType": "class",
        "props": Object {
          "index": 5,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "6",
        "nodeType": "class",
        "props": Object {
          "index": 6,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "7",
        "nodeType": "class",
        "props": Object {
          "index": 7,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "8",
        "nodeType": "class",
        "props": Object {
          "index": 8,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <DropTarget(Placeholder)
            index={0}
/>,
          <DropTarget(Placeholder)
            index={1}
/>,
          <DropTarget(Placeholder)
            index={2}
/>,
          <DropTarget(Placeholder)
            index={3}
/>,
          <DropTarget(Placeholder)
            index={4}
/>,
          <DropTarget(Placeholder)
            index={5}
/>,
          <DropTarget(Placeholder)
            index={6}
/>,
          <DropTarget(Placeholder)
            index={7}
/>,
          <DropTarget(Placeholder)
            index={8}
/>,
        ],
        "className": "Board",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "index": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "index": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "index": 2,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "index": 3,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "index": 4,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "class",
          "props": Object {
            "index": 5,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "6",
          "nodeType": "class",
          "props": Object {
            "index": 6,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "7",
          "nodeType": "class",
          "props": Object {
            "index": 7,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "8",
          "nodeType": "class",
          "props": Object {
            "index": 8,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
