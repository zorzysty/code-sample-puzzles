// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer should render correctly with pieces 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Drawer
    handleDrag={[Function]}
    handleDrop={[Function]}
    pieces={
        Array [
            Object {
              "id": 0,
            },
            Object {
              "id": 2,
            },
            Object {
              "id": 3,
            },
            Object {
              "id": 4,
            },
            Object {
              "id": 5,
            },
            Object {
              "id": 6,
            },
            Object {
              "id": 7,
            },
            Object {
              "id": 8,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 0,
                            }
          }
          style={
                    Object {
                              "left": "253px",
                              "top": "40px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 2,
                            }
          }
          style={
                    Object {
                              "left": "305px",
                              "top": "45px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 3,
                            }
          }
          style={
                    Object {
                              "left": "222px",
                              "top": "31px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 4,
                            }
          }
          style={
                    Object {
                              "left": "323px",
                              "top": "53px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 5,
                            }
          }
          style={
                    Object {
                              "left": "269px",
                              "top": "64px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 6,
                            }
          }
          style={
                    Object {
                              "left": "79px",
                              "top": "73px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 7,
                            }
          }
          style={
                    Object {
                              "left": "266px",
                              "top": "48px",
                            }
          }
/>,
        <DragSource(Piece)
          handleDrag={[Function]}
          handleDrop={[Function]}
          piece={
                    Object {
                              "id": 8,
                            }
          }
          style={undefined}
/>,
      ],
      "className": "Drawer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 0,
          },
          "style": Object {
            "left": "253px",
            "top": "40px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 2,
          },
          "style": Object {
            "left": "305px",
            "top": "45px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 3,
          },
          "style": Object {
            "left": "222px",
            "top": "31px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "4",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 4,
          },
          "style": Object {
            "left": "323px",
            "top": "53px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "5",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 5,
          },
          "style": Object {
            "left": "269px",
            "top": "64px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "6",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 6,
          },
          "style": Object {
            "left": "79px",
            "top": "73px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "7",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 7,
          },
          "style": Object {
            "left": "266px",
            "top": "48px",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "8",
        "nodeType": "class",
        "props": Object {
          "handleDrag": [Function],
          "handleDrop": [Function],
          "piece": Object {
            "id": 8,
          },
          "style": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 0,
                                  }
            }
            style={
                        Object {
                                    "left": "253px",
                                    "top": "40px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 2,
                                  }
            }
            style={
                        Object {
                                    "left": "305px",
                                    "top": "45px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 3,
                                  }
            }
            style={
                        Object {
                                    "left": "222px",
                                    "top": "31px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 4,
                                  }
            }
            style={
                        Object {
                                    "left": "323px",
                                    "top": "53px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 5,
                                  }
            }
            style={
                        Object {
                                    "left": "269px",
                                    "top": "64px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 6,
                                  }
            }
            style={
                        Object {
                                    "left": "79px",
                                    "top": "73px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 7,
                                  }
            }
            style={
                        Object {
                                    "left": "266px",
                                    "top": "48px",
                                  }
            }
/>,
          <DragSource(Piece)
            handleDrag={[Function]}
            handleDrop={[Function]}
            piece={
                        Object {
                                    "id": 8,
                                  }
            }
            style={undefined}
/>,
        ],
        "className": "Drawer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 0,
            },
            "style": Object {
              "left": "253px",
              "top": "40px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 2,
            },
            "style": Object {
              "left": "305px",
              "top": "45px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 3,
            },
            "style": Object {
              "left": "222px",
              "top": "31px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 4,
            },
            "style": Object {
              "left": "323px",
              "top": "53px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "5",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 5,
            },
            "style": Object {
              "left": "269px",
              "top": "64px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "6",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 6,
            },
            "style": Object {
              "left": "79px",
              "top": "73px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "7",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 7,
            },
            "style": Object {
              "left": "266px",
              "top": "48px",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "8",
          "nodeType": "class",
          "props": Object {
            "handleDrag": [Function],
            "handleDrop": [Function],
            "piece": Object {
              "id": 8,
            },
            "style": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Drawer should render correctly without pieces 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Drawer
    handleDrag={[Function]}
    handleDrop={[Function]}
    pieces={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): false,
  Symbol(enzyme.__nodes__): Array [
    false,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
